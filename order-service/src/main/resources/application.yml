spring:
    datasource:
        url: jdbc:postgresql://${POSTGRES_HOST:localhost}:5432/postgres
        username: ${POSTGRES_USER:postgres}
        password: ${POSTGRES_PASSWORD:changeme}
        driver-class-name: org.postgresql.Driver
    jpa:
        hibernate:
            ddl-auto: update
        show-sql: true
        properties:
            hibernate:
                format_sql: true
                dialect: org.hibernate.dialect.PostgreSQLDialect
    application:
        name: order-service
    kafka:
        bootstrap-servers: ${KAFKA_SERVERS:localhost:29092}
        producer:
            key-serializer: org.apache.kafka.common.serialization.StringSerializer
            value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

management:
    endpoints:
        web:
            exposure:
                include: "*"
    metrics:
        tags:
            application: ${spring.application.name}
        distribution:
            percentiles-histogram:
                http:
                    server:
                        requests: 'true'
otel:
    instrumentation:
        micrometer:
            enabled: true
    exporter:
        otlp:
            protocol: grpc
            endpoint:  ${OTEL_EXPORTER_OTLP_ENDPOINT:http://localhost:4317}
    resource:
        attributes:
            deployment.environment: dev
            service:
                name: ${spring.application.name}
                namespace: example
                version: 1.0.0
server:
    port: 8527

app:
    user-service:
        url: ${USER_SERVICE_URL:http://localhost:8525}
