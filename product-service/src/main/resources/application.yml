spring:
    data:
        mongodb:
            host: ${MONGO_HOST:localhost}
            port: 27017
            database: ${MONGO_DB:example}
            username: ${MONGO_USER:mongo}
            password: ${MONGO_PASSWORD:changeme}
            authentication-database: admin
    application:
        name: product-service
    kafka:
        bootstrap-servers: ${KAFKA_SERVERS:localhost:29092}
        consumer:
            group-id: ${spring.application.name}
            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
        producer:
            key-serializer: org.apache.kafka.common.serialization.StringSerializer
            value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

management:
    endpoints:
        web:
            exposure:
                include: "*"
    metrics:
        tags:
            application: ${spring.application.name}
        distribution:
            percentiles-histogram:
                http:
                    server:
                        requests: 'true'
otel:
    instrumentation:
        micrometer:
            enabled: true
    exporter:
        otlp:
            protocol: grpc
            endpoint:  ${OTEL_EXPORTER_OTLP_ENDPOINT:http://localhost:4317}
    resource:
        attributes:
            deployment.environment: dev
            service:
                name: ${spring.application.name}
                namespace: example
                version: 1.0.0
server:
    port: 8526
